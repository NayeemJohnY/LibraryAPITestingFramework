{
    "testPlanName": "Automation Test Plan",
    "testSuiteName": "Book API Automation Test Suite",
    "testCases": {
        "testShouldNotReturnBookWhenBookIdIsInvalidString": {
            "testCaseId": "TC-001"
        },
        "testShouldCreateBookWhenTitleAndAuthorAreValid": {
            "testCaseId": "TC-002"
        },
        "testShouldCreateBookWithJsonStringifyWhenTitleAndAuthorAreValid": {
            "testCaseId": "TC-003"
        },
        "testShouldReturn400WhenDifferentBookIdIsGivenInBody": {
            "testCaseId": "TC-004"
        },
        "testShouldCreateBookWhenAuthorIsDifferentForSameBook": {
            "testCaseId": "TC-005"
        },
        "testShouldRejectBookWhenAuthorIsMissing": {
            "testCaseId": "TC-006"
        },
        "testShouldReturnSingleBookWithTitleAndAuthor": {
            "testCaseId": "TC-007"
        },
        "testShouldReturnBooksContainsTitle": {
            "testCaseId": "TC-008"
        },
        "testShouldReturn403WhenUserAuthTokenIsProvidedOnDelete": {
            "testCaseId": "TC-009"
        },
        "testShouldReturnBooksByLimitAndPage": {
            "testCaseId": "TC-010"
        },
        "testShouldRejectBookWithMissingTitleAndAuthor": {
            "testCaseId": "TC-011"
        },
        "testShouldReturnNoBooksWhenBookWithTitleAndAuthorNotExists": {
            "testCaseId": "TC-012"
        },
        "testShouldRejectBookWhenTitleIsMissing": {
            "testCaseId": "TC-013"
        },
        "testShouldReturnSingleBookByID": {
            "testCaseId": "TC-014"
        },
        "testShouldReturn401WhenNoAuthTokenProvided": {
            "testCaseId": "TC-015"
        },
        "testShouldUpdateBookTitle": {
            "testCaseId": "TC-016"
        },
        "testShouldReturnBooksByPageNumber": {
            "testCaseId": "TC-017"
        },
        "testShouldReturnBooksForDefaultPage1": {
            "testCaseId": "TC-018"
        },
        "testShouldUpdateBookWhenSameBookIdIsGivenInBody": {
            "testCaseId": "TC-019"
        },
        "testShouldReturnBooksContainsTitleAndAuthor": {
            "testCaseId": "TC-020"
        },
        "testShouldReturn404WhenBookWithIdIsNotExists": {
            "testCaseId": "TC-021"
        },
        "testShouldReturnNoBooksWhenBookWithTitleNotExists": {
            "testCaseId": "TC-022"
        },
        "testShouldCreateBookWhenTitleIsDifferentForSameAuthor": {
            "testCaseId": "TC-023"
        },
        "testShouldRejectBookCreationWithClientProvidedId": {
            "testCaseId": "TC-024"
        },
        "testShouldReturnBooksExcludingLastLimitOnNegativeLimit": {
            "testCaseId": "TC-025"
        },
        "testShouldRejectDuplicateBookCreation": {
            "testCaseId": "TC-026"
        },
        "testShouldReturn401WhenNoAuthTokenProvidedOnDelete": {
            "testCaseId": "TC-027"
        },
        "testShouldReturn404WhenBookSearchWithoutAuthorAndTitle": {
            "testCaseId": "TC-028"
        },
        "testShouldReturn401WhenNoAuthIsProvidedOnUpdateBook": {
            "testCaseId": "TC-029"
        },
        "testShouldUpdateBookAuthor": {
            "testCaseId": "TC-030"
        },
        "testShouldReturnNoBooksIfPageNumberIsNotInRange": {
            "testCaseId": "TC-031"
        },
        "testShouldReturnBooksContainsAuthor": {
            "testCaseId": "TC-032"
        },
        "testShouldDeleteBookWhenBookIdIsValid": {
            "testCaseId": "TC-033"
        },
        "testShouldReturnAllBooksWhenBookIdIsEmpty": {
            "testCaseId": "TC-034"
        },
        "testShouldNotReturnBookWhenBookIdNotExists": {
            "testCaseId": "TC-035"
        },
        "testShouldReturnBooksByLimit": {
            "testCaseId": "TC-036"
        },
        "testShouldReturnNoBooksWhenBookWithAuthorNotExists": {
            "testCaseId": "TC-037"
        },
        "testShouldReturn404WhenBookIsAlreadyDeletedOrNotExists": {
            "testCaseId": "TC-038"
        },
        "testShouldReturnNoBooksOnNegativePage": {
            "testCaseId": "TC-039"
        }
    }
}